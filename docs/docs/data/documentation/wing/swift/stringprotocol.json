{"variants":[{"paths":["\/documentation\/wing\/swift\/stringprotocol"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol"},"hierarchy":{"paths":[["doc:\/\/Wing\/documentation\/Wing","doc:\/\/Wing\/documentation\/Wing\/Swift"]]},"metadata":{"fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StringProtocol","kind":"identifier","preciseIdentifier":"s:Sy"}],"roleHeading":"Extended Protocol","modules":[{"name":"Wing","relatedModules":["Swift"]}],"role":"symbol","symbolKind":"extension","navigatorTitle":[{"text":"StringProtocol","kind":"identifier"}],"extendedModule":"Swift","externalID":"s:e:s:Sy4WingE10normalizedSSvp","title":"StringProtocol"},"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/base64Decoded","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/base64Encoded","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/bool","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/camelCased","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/double","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/float","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/int","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isAlphabetic","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isAlphanumeric","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isHexadecimal","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isNumeric","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isPhoneNumber","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isStrongPassword","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isValidEmail","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isValidIPAddress","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isValidPostalCode","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isValidURL","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/kebabCased","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/length","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/lowercasedFirstLetter","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/normalized","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/reversed","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/snakeCased","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/trimmed","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/uppercasedFirstLetter","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/urlDecoded","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/urlEncoded","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/utf8Data"],"title":"Instance Properties","anchor":"Instance-Properties","generated":true},{"identifiers":["doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/appending(_:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/compareVersion(to:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/contains(_:caseSensitive:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/containsOnlyCharactersIn(characterSet:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/date(withFormat:locale:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/endsWith(_:caseSensitive:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/formatCurrency(locale:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/formatNumber(decimalPlaces:locale:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/formatPercentage()","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/indexOf(sub:occurrence:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/inserting(_:at:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isAnagram(of:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isCaseInsensitiveEqual(to:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isValidURL(additionalSchemes:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/matches(regex:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/matchingStrings(regex:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/padding(toLength:withPad:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/removing(_:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/removingHTMLTags()","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/replacing(_:with:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/replacingOccurrences(ofRegex:with:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/sha1()","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/sha256()","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/startsWith(_:caseSensitive:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/substring(from:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/substring(to:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/toData(using:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/toDoubleArray(separatedBy:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/toIntArray(separatedBy:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/toURL()","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/truncate(length:addEllipsis:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/utf8Encoded()"],"title":"Instance Methods","anchor":"Instance-Methods","generated":true},{"identifiers":["doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/empty"],"title":"Type Properties","anchor":"Type-Properties","generated":true},{"identifiers":["doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/random(length:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/random(length:from:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/randomAlphabetic(length:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/randomNumeric(length:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/utf8Decoded(_:)"],"title":"Type Methods","anchor":"Type-Methods","generated":true}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:Sy","text":"StringProtocol","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://Wing/documentation/Wing/Swift/StringProtocol/camelCased":{"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"camelCased","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Converts the string to camel case."}],"url":"\/documentation\/wing\/swift\/stringprotocol\/camelcased","role":"symbol","title":"camelCased","type":"topic","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/camelCased"},"doc://Wing/documentation/Wing/Swift/StringProtocol/uppercasedFirstLetter":{"title":"uppercasedFirstLetter","abstract":[{"type":"text","text":"Returns a new string with the first letter uppercased."}],"kind":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/uppercasedFirstLetter","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"uppercasedFirstLetter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"url":"\/documentation\/wing\/swift\/stringprotocol\/uppercasedfirstletter","type":"topic"},"doc://Wing/documentation/Wing/Swift/StringProtocol/substring(to:)":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"substring","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Returns a substring ending at a given index (exclusive)."}],"title":"substring(to:)","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/substring(to:)","url":"\/documentation\/wing\/swift\/stringprotocol\/substring(to:)"},"doc://Wing/documentation/Wing/Swift/StringProtocol/bool":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"bool","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/bool","kind":"symbol","abstract":[{"text":"Converts the string to a ","type":"text"},{"code":"Bool","type":"codeVoice"},{"text":" (considering “true”, “false”, “yes”, “no”, “1”, “0” - case-insensitive).","type":"text"}],"title":"bool","url":"\/documentation\/wing\/swift\/stringprotocol\/bool","role":"symbol","type":"topic"},"doc://Wing/documentation/Wing/Swift/StringProtocol/replacing(_:with:)":{"role":"symbol","url":"\/documentation\/wing\/swift\/stringprotocol\/replacing(_:with:)","type":"topic","title":"replacing(_:with:)","kind":"symbol","abstract":[{"text":"Returns a new string with all occurrences of a substring replaced.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replacing"},{"kind":"text","text":"("},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/replacing(_:with:)"},"doc://Wing/documentation/Wing/Swift/StringProtocol/isCaseInsensitiveEqual(to:)":{"title":"isCaseInsensitiveEqual(to:)","kind":"symbol","abstract":[{"type":"text","text":"Checks if the string is case-insensitively equal to another string."}],"role":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isCaseInsensitiveEqual(to:)","type":"topic","url":"\/documentation\/wing\/swift\/stringprotocol\/iscaseinsensitiveequal(to:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isCaseInsensitiveEqual","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/isValidEmail":{"url":"\/documentation\/wing\/swift\/stringprotocol\/isvalidemail","title":"isValidEmail","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isValidEmail","abstract":[{"text":"Checks if the string is a valid email address.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isValidEmail"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"kind":"symbol","role":"symbol"},"doc://Wing/documentation/Wing/Swift/StringProtocol/urlEncoded":{"role":"symbol","title":"urlEncoded","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/urlEncoded","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Returns a URL encoded version of the string."}],"url":"\/documentation\/wing\/swift\/stringprotocol\/urlencoded","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"urlEncoded","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/formatCurrency(locale:)":{"abstract":[{"text":"Formats the string as a currency string using the specified locale.","type":"text"}],"title":"formatCurrency(locale:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"formatCurrency","kind":"identifier"},{"text":"(","kind":"text"},{"text":"locale","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Locale","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation6LocaleV"},{"text":") -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/formatCurrency(locale:)","type":"topic","url":"\/documentation\/wing\/swift\/stringprotocol\/formatcurrency(locale:)","role":"symbol","kind":"symbol"},"doc://Wing/documentation/Wing/Swift/StringProtocol/isValidIPAddress":{"identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isValidIPAddress","abstract":[{"text":"Checks if the string is a valid IP address (IPv4).","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isValidIPAddress","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"isValidIPAddress","role":"symbol","url":"\/documentation\/wing\/swift\/stringprotocol\/isvalidipaddress","type":"topic","kind":"symbol"},"doc://Wing/documentation/Wing/Swift/StringProtocol/formatPercentage()":{"identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/formatPercentage()","abstract":[{"type":"text","text":"Formats the string as a percentage string."}],"role":"symbol","title":"formatPercentage()","url":"\/documentation\/wing\/swift\/stringprotocol\/formatpercentage()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"formatPercentage"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?"}],"kind":"symbol","type":"topic"},"doc://Wing/documentation/Wing/Swift/StringProtocol/replacingOccurrences(ofRegex:with:)":{"role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"replacingOccurrences","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ofRegex","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"url":"\/documentation\/wing\/swift\/stringprotocol\/replacingoccurrences(ofregex:with:)","abstract":[{"text":"Replaces all occurrences matching a regular expression with a given string.","type":"text"}],"title":"replacingOccurrences(ofRegex:with:)","type":"topic","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/replacingOccurrences(ofRegex:with:)"},"doc://Wing/documentation/Wing/Swift/StringProtocol/isNumeric":{"abstract":[{"text":"Checks if the string contains only numeric characters.","type":"text"}],"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isNumeric","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"role":"symbol","type":"topic","title":"isNumeric","url":"\/documentation\/wing\/swift\/stringprotocol\/isnumeric","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isNumeric"},"doc://Wing/documentation/Wing/Swift/StringProtocol/matches(regex:)":{"url":"\/documentation\/wing\/swift\/stringprotocol\/matches(regex:)","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"matches","kind":"identifier"},{"text":"(","kind":"text"},{"text":"regex","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"text":"Checks if the string matches a given regular expression.","type":"text"}],"title":"matches(regex:)","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/matches(regex:)"},"doc://Wing/documentation/Wing/Swift/StringProtocol/double":{"identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/double","url":"\/documentation\/wing\/swift\/stringprotocol\/double","role":"symbol","title":"double","kind":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"double","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":"?","kind":"text"}],"abstract":[{"text":"Converts the string to a ","type":"text"},{"code":"Double","type":"codeVoice"},{"text":".","type":"text"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/isValidURL":{"identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isValidURL","url":"\/documentation\/wing\/swift\/stringprotocol\/isvalidurl","role":"symbol","title":"isValidURL","kind":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isValidURL","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"text":"Checks if the string is a valid URL.","type":"text"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/appending(_:)":{"identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/appending(_:)","url":"\/documentation\/wing\/swift\/stringprotocol\/appending(_:)","role":"symbol","title":"appending(_:)","kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"appending","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"abstract":[{"text":"Returns a new string with another string appended.","type":"text"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/kebabCased":{"identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/kebabCased","url":"\/documentation\/wing\/swift\/stringprotocol\/kebabcased","role":"symbol","title":"kebabCased","abstract":[{"type":"text","text":"Converts the string to kebab case."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"kebabCased","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"kind":"symbol","type":"topic"},"doc://Wing/documentation/Wing/Swift/StringProtocol/containsOnlyCharactersIn(characterSet:)":{"abstract":[{"text":"Checks if the string contains only characters from a given set.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/containsOnlyCharactersIn(characterSet:)","title":"containsOnlyCharactersIn(characterSet:)","url":"\/documentation\/wing\/swift\/stringprotocol\/containsonlycharactersin(characterset:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"containsOnlyCharactersIn","kind":"identifier"},{"text":"(","kind":"text"},{"text":"characterSet","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CharacterSet","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12CharacterSetV"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://Wing/documentation/Wing":{"abstract":[],"kind":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing","title":"Wing","url":"\/documentation\/wing","type":"topic","role":"collection"},"doc://Wing/documentation/Wing/Swift/StringProtocol/removing(_:)":{"identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/removing(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"removing","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"kind":"symbol","type":"topic","title":"removing(_:)","url":"\/documentation\/wing\/swift\/stringprotocol\/removing(_:)","abstract":[{"type":"text","text":"Returns a new string with all occurrences of a substring removed."}],"role":"symbol"},"doc://Wing/documentation/Wing/Swift/StringProtocol/isValidURL(additionalSchemes:)":{"role":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isValidURL(additionalSchemes:)","url":"\/documentation\/wing\/swift\/stringprotocol\/isvalidurl(additionalschemes:)","abstract":[{"text":"Checks if the string is a valid URL and allow custom schemes","type":"text"}],"title":"isValidURL(additionalSchemes:)","kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isValidURL","kind":"identifier"},{"text":"(","kind":"text"},{"text":"additionalSchemes","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"]) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/lowercasedFirstLetter":{"kind":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/lowercasedFirstLetter","title":"lowercasedFirstLetter","role":"symbol","abstract":[{"text":"Returns a new string with the first letter lowercased.","type":"text"}],"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lowercasedFirstLetter","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"url":"\/documentation\/wing\/swift\/stringprotocol\/lowercasedfirstletter"},"doc://Wing/documentation/Wing/Swift/StringProtocol/isAlphabetic":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isAlphabetic"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"role":"symbol","url":"\/documentation\/wing\/swift\/stringprotocol\/isalphabetic","abstract":[{"type":"text","text":"Checks if the string contains only alphabetic characters."}],"kind":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isAlphabetic","title":"isAlphabetic","type":"topic"},"doc://Wing/documentation/Wing/Swift/StringProtocol/utf8Data":{"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"utf8Data","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"},{"text":"?","kind":"text"}],"url":"\/documentation\/wing\/swift\/stringprotocol\/utf8data","type":"topic","role":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/utf8Data","title":"utf8Data","abstract":[{"text":"Converts the string to ","type":"text"},{"code":"Data","type":"codeVoice"},{"text":" using UTF-8 encoding.","type":"text"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/compareVersion(to:)":{"title":"compareVersion(to:)","kind":"symbol","type":"topic","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/compareVersion(to:)","abstract":[{"text":"Compares the string to another string as version numbers (semantic versioning).","type":"text"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"compareVersion","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"text":"ComparisonResult","kind":"typeIdentifier","preciseIdentifier":"c:@E@NSComparisonResult"}],"url":"\/documentation\/wing\/swift\/stringprotocol\/compareversion(to:)"},"doc://Wing/documentation/Wing/Swift/StringProtocol/random(length:from:)":{"abstract":[{"text":"Generates a random string of a given length using a custom set of characters.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"random","kind":"identifier"},{"text":"(","kind":"text"},{"text":"length","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/random(length:from:)","title":"random(length:from:)","kind":"symbol","url":"\/documentation\/wing\/swift\/stringprotocol\/random(length:from:)"},"doc://Wing/documentation/Wing/Swift/StringProtocol/date(withFormat:locale:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"date"},{"kind":"text","text":"("},{"kind":"externalParam","text":"withFormat"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"text":"locale","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Locale","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation6LocaleV"},{"text":") -> ","kind":"text"},{"text":"Date","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/date(withFormat:locale:)","abstract":[{"text":"Converts the string to a ","type":"text"},{"code":"Date","type":"codeVoice"},{"text":" using the specified format.","type":"text"}],"kind":"symbol","type":"topic","title":"date(withFormat:locale:)","url":"\/documentation\/wing\/swift\/stringprotocol\/date(withformat:locale:)"},"doc://Wing/documentation/Wing/Swift/StringProtocol/utf8Decoded(_:)":{"type":"topic","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/utf8Decoded(_:)","abstract":[{"text":"Returns a UTF-8 decoded version of the string from ","type":"text"},{"code":"Data","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/wing\/swift\/stringprotocol\/utf8decoded(_:)","title":"utf8Decoded(_:)","kind":"symbol","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"utf8Decoded","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"},{"text":") -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?","kind":"text"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/random(length:)":{"kind":"symbol","abstract":[{"text":"Generates a random string of a given length using alphanumeric characters.","type":"text"}],"url":"\/documentation\/wing\/swift\/stringprotocol\/random(length:)","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/random(length:)","title":"random(length:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"random","kind":"identifier"},{"text":"(","kind":"text"},{"text":"length","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"type":"topic","role":"symbol"},"doc://Wing/documentation/Wing/Swift/StringProtocol/isAnagram(of:)":{"url":"\/documentation\/wing\/swift\/stringprotocol\/isanagram(of:)","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isAnagram(of:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isAnagram","kind":"identifier"},{"text":"(","kind":"text"},{"text":"of","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"isAnagram(of:)","role":"symbol","type":"topic","abstract":[{"text":"Checks if the string is an anagram of another string.","type":"text"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/snakeCased":{"url":"\/documentation\/wing\/swift\/stringprotocol\/snakecased","title":"snakeCased","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/snakeCased","type":"topic","kind":"symbol","abstract":[{"text":"Converts the string to snake case.","type":"text"}],"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"snakeCased","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/contains(_:caseSensitive:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"contains","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"caseSensitive","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"text":"Checks if the string contains another string (case-sensitive by default).","type":"text"}],"url":"\/documentation\/wing\/swift\/stringprotocol\/contains(_:casesensitive:)","title":"contains(_:caseSensitive:)","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/contains(_:caseSensitive:)","kind":"symbol","role":"symbol","type":"topic"},"doc://Wing/documentation/Wing/Swift/StringProtocol/startsWith(_:caseSensitive:)":{"title":"startsWith(_:caseSensitive:)","kind":"symbol","abstract":[{"text":"Checks if the string starts with another string (case-sensitive by default).","type":"text"}],"url":"\/documentation\/wing\/swift\/stringprotocol\/startswith(_:casesensitive:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"startsWith","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"caseSensitive","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"role":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/startsWith(_:caseSensitive:)","type":"topic"},"doc://Wing/documentation/Wing/Swift/StringProtocol/formatNumber(decimalPlaces:locale:)":{"url":"\/documentation\/wing\/swift\/stringprotocol\/formatnumber(decimalplaces:locale:)","abstract":[{"text":"Formats the string as a number with a specified number of decimal places.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/formatNumber(decimalPlaces:locale:)","title":"formatNumber(decimalPlaces:locale:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"formatNumber","kind":"identifier"},{"text":"(","kind":"text"},{"text":"decimalPlaces","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"locale","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Locale","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation6LocaleV"},{"text":") -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?","kind":"text"}],"type":"topic","role":"symbol"},"doc://Wing/documentation/Wing/Swift/StringProtocol/isHexadecimal":{"url":"\/documentation\/wing\/swift\/stringprotocol\/ishexadecimal","title":"isHexadecimal","abstract":[{"type":"text","text":"Checks if the string is a valid hexadecimal string."}],"identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isHexadecimal","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isHexadecimal"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"type":"topic"},"doc://Wing/documentation/Wing/Swift/StringProtocol/urlDecoded":{"identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/urlDecoded","role":"symbol","url":"\/documentation\/wing\/swift\/stringprotocol\/urldecoded","title":"urlDecoded","kind":"symbol","abstract":[{"text":"Returns a URL decoded version of the string.","type":"text"}],"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"urlDecoded","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/trimmed":{"kind":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/trimmed","title":"trimmed","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmed","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"abstract":[{"text":"Returns a new string with leading and trailing whitespace and newline characters removed.","type":"text"}],"type":"topic","url":"\/documentation\/wing\/swift\/stringprotocol\/trimmed"},"doc://Wing/documentation/Wing/Swift/StringProtocol/toDoubleArray(separatedBy:)":{"title":"toDoubleArray(separatedBy:)","kind":"symbol","type":"topic","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/toDoubleArray(separatedBy:)","url":"\/documentation\/wing\/swift\/stringprotocol\/todoublearray(separatedby:)","abstract":[{"text":"Converts the string to an array of doubles (splitting by comma by default).","type":"text"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"toDoubleArray","kind":"identifier"},{"text":"(","kind":"text"},{"text":"separatedBy","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") -> [","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":"]","kind":"text"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/reversed":{"identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/reversed","kind":"symbol","url":"\/documentation\/wing\/swift\/stringprotocol\/reversed","role":"symbol","title":"reversed","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reversed","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"abstract":[{"text":"Returns the reversed string.","type":"text"}],"type":"topic"},"doc://Wing/documentation/Wing/Swift/StringProtocol/utf8Encoded()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"utf8Encoded","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"},{"text":"?","kind":"text"}],"title":"utf8Encoded()","kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/wing\/swift\/stringprotocol\/utf8encoded()","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/utf8Encoded()","abstract":[{"text":"Returns a UTF-8 encoded version of the string as ","type":"text"},{"code":"Data","type":"codeVoice"},{"text":".","type":"text"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/isValidPostalCode":{"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/wing\/swift\/stringprotocol\/isvalidpostalcode","abstract":[{"type":"text","text":"Checks if the string is a valid postal code (US format: 5 digits or 5 digits followed by a hyphen and 4 digits)."}],"identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isValidPostalCode","title":"isValidPostalCode","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isValidPostalCode","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://Wing/documentation/Wing/Swift":{"role":"collection","abstract":[],"identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift","type":"topic","title":"Swift","kind":"symbol","url":"\/documentation\/wing\/swift"},"doc://Wing/documentation/Wing/Swift/StringProtocol/isAlphanumeric":{"type":"topic","title":"isAlphanumeric","url":"\/documentation\/wing\/swift\/stringprotocol\/isalphanumeric","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isAlphanumeric","kind":"symbol","abstract":[{"type":"text","text":"Checks if the string contains only alphanumeric characters."}],"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isAlphanumeric"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/indexOf(sub:occurrence:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"indexOf","kind":"identifier"},{"text":"(","kind":"text"},{"text":"sub","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"occurrence","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":"?","kind":"text"}],"type":"topic","role":"symbol","abstract":[{"text":"Finds the index of the nth occurrence of a substring.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/indexOf(sub:occurrence:)","url":"\/documentation\/wing\/swift\/stringprotocol\/indexof(sub:occurrence:)","title":"indexOf(sub:occurrence:)"},"doc://Wing/documentation/Wing/Swift/StringProtocol/removingHTMLTags()":{"identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/removingHTMLTags()","title":"removingHTMLTags()","url":"\/documentation\/wing\/swift\/stringprotocol\/removinghtmltags()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removingHTMLTags"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Returns a new string with all HTML tags removed."}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/padding(toLength:withPad:)":{"identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/padding(toLength:withPad:)","url":"\/documentation\/wing\/swift\/stringprotocol\/padding(tolength:withpad:)","abstract":[{"text":"Pads the string to a specified length by appending a padding character at the end.","type":"text"}],"kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"padding","kind":"identifier"},{"text":"(","kind":"text"},{"text":"toLength","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"withPad","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"role":"symbol","title":"padding(toLength:withPad:)"},"doc://Wing/documentation/Wing/Swift/StringProtocol/substring(from:)":{"title":"substring(from:)","kind":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/substring(from:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"substring"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"role":"symbol","url":"\/documentation\/wing\/swift\/stringprotocol\/substring(from:)","type":"topic","abstract":[{"text":"Returns a substring starting from a given index.","type":"text"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/base64Decoded":{"url":"\/documentation\/wing\/swift\/stringprotocol\/base64decoded","kind":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/base64Decoded","title":"base64Decoded","abstract":[{"text":"Returns the base64 decoded version of the string.","type":"text"}],"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"base64Decoded","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?","kind":"text"}],"type":"topic"},"doc://Wing/documentation/Wing/Swift/StringProtocol/toIntArray(separatedBy:)":{"abstract":[{"text":"Converts the string to an array of integers (splitting by comma by default).","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"toIntArray","kind":"identifier"},{"text":"(","kind":"text"},{"text":"separatedBy","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") -> [","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":"]","kind":"text"}],"identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/toIntArray(separatedBy:)","type":"topic","url":"\/documentation\/wing\/swift\/stringprotocol\/tointarray(separatedby:)","title":"toIntArray(separatedBy:)","kind":"symbol","role":"symbol"},"doc://Wing/documentation/Wing/Swift/StringProtocol/toURL()":{"kind":"symbol","url":"\/documentation\/wing\/swift\/stringprotocol\/tourl()","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"toURL","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"URL","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation3URLV"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/toURL()","role":"symbol","title":"toURL()","abstract":[{"text":"Converts the string to a ","type":"text"},{"code":"URL","type":"codeVoice"},{"text":".","type":"text"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol":{"identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol","fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"kind":"identifier","text":"StringProtocol","preciseIdentifier":"s:Sy"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"StringProtocol"}],"abstract":[],"type":"topic","url":"\/documentation\/wing\/swift\/stringprotocol","title":"StringProtocol","role":"symbol"},"doc://Wing/documentation/Wing/Swift/StringProtocol/randomAlphabetic(length:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"randomAlphabetic","kind":"identifier"},{"text":"(","kind":"text"},{"text":"length","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"abstract":[{"text":"Generates a random string of a given length using only alphabetic characters.","type":"text"}],"identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/randomAlphabetic(length:)","title":"randomAlphabetic(length:)","type":"topic","role":"symbol","url":"\/documentation\/wing\/swift\/stringprotocol\/randomalphabetic(length:)","kind":"symbol"},"doc://Wing/documentation/Wing/Swift/StringProtocol/isPhoneNumber":{"url":"\/documentation\/wing\/swift\/stringprotocol\/isphonenumber","kind":"symbol","role":"symbol","title":"isPhoneNumber","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isPhoneNumber","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"text":"Checks if the string is a valid phone number (basic format allowing digits, +, -, space, (, )).","type":"text"}],"type":"topic","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isPhoneNumber"},"doc://Wing/documentation/Wing/Swift/StringProtocol/randomNumeric(length:)":{"abstract":[{"type":"text","text":"Generates a random string of a given length using only numeric characters."}],"role":"symbol","url":"\/documentation\/wing\/swift\/stringprotocol\/randomnumeric(length:)","title":"randomNumeric(length:)","kind":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/randomNumeric(length:)","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"randomNumeric"},{"kind":"text","text":"("},{"kind":"externalParam","text":"length"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/sha256()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"sha256","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"type":"topic","role":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/sha256()","url":"\/documentation\/wing\/swift\/stringprotocol\/sha256()","title":"sha256()","kind":"symbol","abstract":[{"text":"Returns the SHA256 hash of the string.","type":"text"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/isStrongPassword":{"identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isStrongPassword","type":"topic","kind":"symbol","abstract":[{"text":"Checks if the string is a strong password (minimum 8 characters, at least one uppercase, one lowercase, and one number).","type":"text"}],"title":"isStrongPassword","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isStrongPassword","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/wing\/swift\/stringprotocol\/isstrongpassword"},"doc://Wing/documentation/Wing/Swift/StringProtocol/empty":{"type":"topic","abstract":[{"text":"Returns an empty string.","type":"text"}],"role":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/empty","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"empty","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"title":"empty","url":"\/documentation\/wing\/swift\/stringprotocol\/empty"},"doc://Wing/documentation/Wing/Swift/StringProtocol/endsWith(_:caseSensitive:)":{"type":"topic","abstract":[{"text":"Checks if the string ends with another string (case-sensitive by default).","type":"text"}],"role":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/endsWith(_:caseSensitive:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"endsWith","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"caseSensitive","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"endsWith(_:caseSensitive:)","url":"\/documentation\/wing\/swift\/stringprotocol\/endswith(_:casesensitive:)"},"doc://Wing/documentation/Wing/Swift/StringProtocol/toData(using:)":{"identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/toData(using:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"toData","kind":"identifier"},{"text":"(","kind":"text"},{"text":"using","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:SS10FoundationE8EncodingV","text":"Encoding","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DataV","text":"Data","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"abstract":[{"text":"Converts the string to ","type":"text"},{"code":"Data","type":"codeVoice"},{"text":" using a specified encoding.","type":"text"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/wing\/swift\/stringprotocol\/todata(using:)","title":"toData(using:)"},"doc://Wing/documentation/Wing/Swift/StringProtocol/matchingStrings(regex:)":{"url":"\/documentation\/wing\/swift\/stringprotocol\/matchingstrings(regex:)","type":"topic","kind":"symbol","title":"matchingStrings(regex:)","abstract":[{"type":"text","text":"Returns all substrings that match a given regular expression."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"matchingStrings","kind":"identifier"},{"text":"(","kind":"text"},{"text":"regex","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":") -> [","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/matchingStrings(regex:)","role":"symbol"},"doc://Wing/documentation/Wing/Swift/StringProtocol/int":{"identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/int","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"int"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":"?"}],"role":"symbol","kind":"symbol","url":"\/documentation\/wing\/swift\/stringprotocol\/int","abstract":[{"type":"text","text":"Converts the string to an "},{"code":"Int","type":"codeVoice"},{"type":"text","text":"."}],"title":"int"},"doc://Wing/documentation/Wing/Swift/StringProtocol/base64Encoded":{"url":"\/documentation\/wing\/swift\/stringprotocol\/base64encoded","type":"topic","kind":"symbol","title":"base64Encoded","abstract":[{"type":"text","text":"Returns the base64 encoded version of the string."}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"base64Encoded","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/base64Encoded","role":"symbol"},"doc://Wing/documentation/Wing/Swift/StringProtocol/truncate(length:addEllipsis:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"truncate","kind":"identifier"},{"text":"(","kind":"text"},{"text":"length","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"addEllipsis","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"abstract":[{"text":"Truncates the string to a specified length, optionally adding an ellipsis.","type":"text"}],"identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/truncate(length:addEllipsis:)","type":"topic","kind":"symbol","url":"\/documentation\/wing\/swift\/stringprotocol\/truncate(length:addellipsis:)","role":"symbol","title":"truncate(length:addEllipsis:)"},"doc://Wing/documentation/Wing/Swift/StringProtocol/inserting(_:at:)":{"title":"inserting(_:at:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"inserting","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/inserting(_:at:)","type":"topic","abstract":[{"type":"text","text":"Returns a new string with another string inserted at a given index."}],"url":"\/documentation\/wing\/swift\/stringprotocol\/inserting(_:at:)","kind":"symbol","role":"symbol"},"doc://Wing/documentation/Wing/Swift/StringProtocol/float":{"identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/float","abstract":[{"type":"text","text":"Converts the string to a "},{"code":"Float","type":"codeVoice"},{"type":"text","text":"."}],"type":"topic","url":"\/documentation\/wing\/swift\/stringprotocol\/float","kind":"symbol","role":"symbol","title":"float","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"float","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sf","text":"Float","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/length":{"type":"topic","title":"length","abstract":[{"type":"text","text":"The length of the string."}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/length","url":"\/documentation\/wing\/swift\/stringprotocol\/length","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"length","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/normalized":{"title":"normalized","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/normalized","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"normalized","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"kind":"symbol","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Returns a new string with diacritic marks removed (e.g., “café” becomes “cafe”)."}],"url":"\/documentation\/wing\/swift\/stringprotocol\/normalized"},"doc://Wing/documentation/Wing/Swift/StringProtocol/sha1()":{"kind":"symbol","role":"symbol","url":"\/documentation\/wing\/swift\/stringprotocol\/sha1()","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/sha1()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"sha1","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Returns the SHA1 hash of the string."}],"title":"sha1()","type":"topic"}}}