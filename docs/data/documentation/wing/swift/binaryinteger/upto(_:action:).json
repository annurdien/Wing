{"metadata":{"modules":[{"name":"Wing","relatedModules":["Swift"]}],"extendedModule":"Swift","symbolKind":"method","role":"symbol","roleHeading":"Instance Method","title":"upto(_:action:)","externalID":"s:Sz4WingE4upto_6actionyx_yxXEtF","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"upto"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"externalParam","text":"action"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}]},"identifier":{"url":"doc:\/\/Wing\/documentation\/Wing\/Swift\/BinaryInteger\/upto(_:action:)","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/Wing\/documentation\/Wing","doc:\/\/Wing\/documentation\/Wing\/Swift","doc:\/\/Wing\/documentation\/Wing\/Swift\/BinaryInteger"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"upto"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"externalParam","text":"action"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The upper bound of the range (inclusive)."}]}],"name":"value"},{"content":[{"inlineContent":[{"text":"A closure that takes the current integer as its argument and returns no value.","type":"text"}],"type":"paragraph"}],"name":"action"}]},{"content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"codeListing","code":["1.upto(5) { print($0) } \/\/ Prints 1, 2, 3, 4, 5."],"syntax":"swift"}],"kind":"content"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"text":"Executes the given closure for each integer from this value up to (and including) the given value.","type":"text"}],"variants":[{"paths":["\/documentation\/wing\/swift\/binaryinteger\/upto(_:action:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Wing/documentation/Wing/Swift":{"identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift","role":"collection","type":"topic","url":"\/documentation\/wing\/swift","abstract":[],"title":"Swift","kind":"symbol"},"doc://Wing/documentation/Wing/Swift/BinaryInteger":{"abstract":[],"url":"\/documentation\/wing\/swift\/binaryinteger","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/BinaryInteger","kind":"symbol","title":"BinaryInteger","type":"topic","navigatorTitle":[{"text":"BinaryInteger","kind":"identifier"}],"fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BinaryInteger","kind":"identifier","preciseIdentifier":"s:Sz"}],"role":"symbol"},"doc://Wing/documentation/Wing":{"title":"Wing","kind":"symbol","role":"collection","type":"topic","abstract":[],"url":"\/documentation\/wing","identifier":"doc:\/\/Wing\/documentation\/Wing"},"doc://Wing/documentation/Wing/Swift/BinaryInteger/upto(_:action:)":{"identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/BinaryInteger\/upto(_:action:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"upto"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"externalParam","text":"action"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"title":"upto(_:action:)","url":"\/documentation\/wing\/swift\/binaryinteger\/upto(_:action:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Executes the given closure for each integer from this value up to (and including) the given value."}],"role":"symbol"}}}