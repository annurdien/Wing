{"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"orThrow","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"error","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@autoclosure ","kind":"attribute"},{"text":"() -> any ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The custom error to throw if the optional is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}]}],"name":"error"}]},{"content":[{"text":"Return Value","type":"heading","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"text":"The unwrapped value of the optional.","type":"text"}]}],"kind":"content"},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"inlineContent":[{"text":"Use this method when you want to ensure an optional has a value or explicitly handle the error case.","type":"text"}],"type":"paragraph"},{"name":"Throws","style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"The provided custom error.","type":"text"}]}]},{"inlineContent":[{"text":"Example:","type":"text"}],"type":"paragraph"},{"code":["enum MyError: Error {","    case missingValue","}","","let value: Int? = nil","do {","    let result = try value.orThrow(MyError.missingValue)","} catch {","    print(error) \/\/ Prints: missingValue","}"],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/wing\/swift\/optional\/orthrow(_:)"]}],"abstract":[{"text":"Unwraps the Optional or throws a custom error if it’s ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Wing\/documentation\/Wing\/Swift\/Optional\/orThrow(_:)"},"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/Wing\/documentation\/Wing","doc:\/\/Wing\/documentation\/Wing\/Swift","doc:\/\/Wing\/documentation\/Wing\/Swift\/Optional"]]},"metadata":{"symbolKind":"method","title":"orThrow(_:)","externalID":"s:Sq4WingE7orThrowyxs5Error_pyXKKF","extendedModule":"Swift","roleHeading":"Instance Method","modules":[{"name":"Wing","relatedModules":["Swift"]}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"orThrow","kind":"identifier"},{"text":"(","kind":"text"},{"text":"@autoclosure ","kind":"attribute"},{"text":"() -> any ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"}]},"references":{"doc://Wing/documentation/Wing/Swift":{"identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift","role":"collection","type":"topic","url":"\/documentation\/wing\/swift","abstract":[],"title":"Swift","kind":"symbol"},"doc://Wing/documentation/Wing":{"identifier":"doc:\/\/Wing\/documentation\/Wing","type":"topic","url":"\/documentation\/wing","kind":"symbol","role":"collection","title":"Wing","abstract":[]},"doc://Wing/documentation/Wing/Swift/Optional":{"navigatorTitle":[{"kind":"identifier","text":"Optional"}],"role":"symbol","fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"kind":"identifier","text":"Optional","preciseIdentifier":"s:Sq"}],"kind":"symbol","title":"Optional","abstract":[],"url":"\/documentation\/wing\/swift\/optional","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/Optional","type":"topic"},"doc://Wing/documentation/Wing/Swift/Optional/orThrow(_:)":{"abstract":[{"text":"Unwraps the Optional or throws a custom error if it’s ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}],"title":"orThrow(_:)","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/Optional\/orThrow(_:)","url":"\/documentation\/wing\/swift\/optional\/orthrow(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"orThrow","kind":"identifier"},{"text":"(","kind":"text"},{"text":"@autoclosure ","kind":"attribute"},{"text":"() -> any ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"}]}}}