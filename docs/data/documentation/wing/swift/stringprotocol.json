{"metadata":{"extendedModule":"Swift","title":"StringProtocol","roleHeading":"Extended Protocol","symbolKind":"extension","role":"symbol","externalID":"s:e:s:Sy4WingE10normalizedSSvp","navigatorTitle":[{"text":"StringProtocol","kind":"identifier"}],"modules":[{"name":"Wing","relatedModules":["Swift"]}],"fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"preciseIdentifier":"s:Sy","text":"StringProtocol","kind":"identifier"}]},"topicSections":[{"identifiers":["doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/base64Decoded","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/base64Encoded","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/bool","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/camelCased","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/double","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/float","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/int","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isAlphabetic","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isAlphanumeric","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isHexadecimal","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isNumeric","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isPhoneNumber","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isStrongPassword","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isValidEmail","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isValidIPAddress","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isValidPostalCode","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isValidURL","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/kebabCased","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/length","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/lowercasedFirstLetter","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/normalized","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/reversed","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/snakeCased","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/trimmed","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/uppercasedFirstLetter","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/urlDecoded","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/urlEncoded","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/utf8Data"],"generated":true,"title":"Instance Properties","anchor":"Instance-Properties"},{"generated":true,"title":"Instance Methods","anchor":"Instance-Methods","identifiers":["doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/appending(_:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/compareVersion(to:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/contains(_:caseSensitive:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/containsOnlyCharactersIn(characterSet:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/date(withFormat:locale:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/endsWith(_:caseSensitive:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/formatCurrency(locale:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/formatNumber(decimalPlaces:locale:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/formatPercentage()","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/indexOf(sub:occurrence:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/inserting(_:at:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isAnagram(of:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isCaseInsensitiveEqual(to:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isValidURL(additionalSchemes:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/matches(regex:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/matchingStrings(regex:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/padding(toLength:withPad:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/removing(_:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/removingHTMLTags()","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/replacing(_:with:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/replacingOccurrences(ofRegex:with:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/sha1()","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/sha256()","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/startsWith(_:caseSensitive:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/substring(from:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/substring(to:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/toData(using:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/toDoubleArray(separatedBy:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/toIntArray(separatedBy:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/toURL()","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/truncate(length:addEllipsis:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/utf8Encoded()"]},{"identifiers":["doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/empty"],"generated":true,"title":"Type Properties","anchor":"Type-Properties"},{"generated":true,"identifiers":["doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/random(length:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/random(length:from:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/randomAlphabetic(length:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/randomNumeric(length:)","doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/utf8Decoded(_:)"],"title":"Type Methods","anchor":"Type-Methods"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"extension"},{"text":" ","kind":"text"},{"text":"StringProtocol","preciseIdentifier":"s:Sy","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/wing\/swift\/stringprotocol"]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Wing\/documentation\/Wing","doc:\/\/Wing\/documentation\/Wing\/Swift"]]},"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol","interfaceLanguage":"swift"},"references":{"doc://Wing/documentation/Wing/Swift/StringProtocol/utf8Encoded()":{"url":"\/documentation\/wing\/swift\/stringprotocol\/utf8encoded()","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/utf8Encoded()","role":"symbol","title":"utf8Encoded()","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Returns a UTF-8 encoded version of the string as "},{"type":"codeVoice","code":"Data"},{"type":"text","text":"."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"utf8Encoded"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Data","preciseIdentifier":"s:10Foundation4DataV"},{"text":"?","kind":"text"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/substring(to:)":{"type":"topic","title":"substring(to:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/substring(to:)","url":"\/documentation\/wing\/swift\/stringprotocol\/substring(to:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"substring","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"abstract":[{"text":"Returns a substring ending at a given index (exclusive).","type":"text"}]},"doc://Wing/documentation/Wing":{"abstract":[],"kind":"symbol","url":"\/documentation\/wing","identifier":"doc:\/\/Wing\/documentation\/Wing","title":"Wing","type":"topic","role":"collection"},"doc://Wing/documentation/Wing/Swift/StringProtocol/formatCurrency(locale:)":{"abstract":[{"text":"Formats the string as a currency string using the specified locale.","type":"text"}],"type":"topic","url":"\/documentation\/wing\/swift\/stringprotocol\/formatcurrency(locale:)","kind":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/formatCurrency(locale:)","title":"formatCurrency(locale:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"formatCurrency"},{"text":"(","kind":"text"},{"text":"locale","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation6LocaleV","text":"Locale","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/length":{"type":"topic","title":"length","role":"symbol","kind":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/length","url":"\/documentation\/wing\/swift\/stringprotocol\/length","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"length","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}],"abstract":[{"text":"The length of the string.","type":"text"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/normalized":{"abstract":[{"text":"Returns a new string with diacritic marks removed (e.g., “café” becomes “cafe”).","type":"text"}],"type":"topic","url":"\/documentation\/wing\/swift\/stringprotocol\/normalized","kind":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/normalized","title":"normalized","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"normalized","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/compareVersion(to:)":{"type":"topic","title":"compareVersion(to:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/compareVersion(to:)","url":"\/documentation\/wing\/swift\/stringprotocol\/compareversion(to:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"compareVersion","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"to"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"ComparisonResult","preciseIdentifier":"c:@E@NSComparisonResult"}],"abstract":[{"type":"text","text":"Compares the string to another string as version numbers (semantic versioning)."}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/randomNumeric(length:)":{"abstract":[{"type":"text","text":"Generates a random string of a given length using only numeric characters."}],"type":"topic","url":"\/documentation\/wing\/swift\/stringprotocol\/randomnumeric(length:)","kind":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/randomNumeric(length:)","title":"randomNumeric(length:)","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"randomNumeric"},{"text":"(","kind":"text"},{"text":"length","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/replacingOccurrences(ofRegex:with:)":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"replacingOccurrences","kind":"identifier"},{"kind":"text","text":"("},{"text":"ofRegex","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"abstract":[{"type":"text","text":"Replaces all occurrences matching a regular expression with a given string."}],"type":"topic","url":"\/documentation\/wing\/swift\/stringprotocol\/replacingoccurrences(ofregex:with:)","title":"replacingOccurrences(ofRegex:with:)","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/replacingOccurrences(ofRegex:with:)","role":"symbol"},"doc://Wing/documentation/Wing/Swift/StringProtocol/urlEncoded":{"type":"topic","title":"urlEncoded","role":"symbol","kind":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/urlEncoded","url":"\/documentation\/wing\/swift\/stringprotocol\/urlencoded","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"urlEncoded","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"abstract":[{"text":"Returns a URL encoded version of the string.","type":"text"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/isStrongPassword":{"abstract":[{"text":"Checks if the string is a strong password (minimum 8 characters, at least one uppercase, one lowercase, and one number).","type":"text"}],"type":"topic","url":"\/documentation\/wing\/swift\/stringprotocol\/isstrongpassword","kind":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isStrongPassword","title":"isStrongPassword","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"isStrongPassword","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/camelCased":{"type":"topic","title":"camelCased","role":"symbol","kind":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/camelCased","url":"\/documentation\/wing\/swift\/stringprotocol\/camelcased","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"camelCased","kind":"identifier"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"abstract":[{"text":"Converts the string to camel case.","type":"text"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/isValidEmail":{"abstract":[{"text":"Checks if the string is a valid email address.","type":"text"}],"type":"topic","url":"\/documentation\/wing\/swift\/stringprotocol\/isvalidemail","kind":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isValidEmail","title":"isValidEmail","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"isValidEmail","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/truncate(length:addEllipsis:)":{"type":"topic","title":"truncate(length:addEllipsis:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/truncate(length:addEllipsis:)","url":"\/documentation\/wing\/swift\/stringprotocol\/truncate(length:addellipsis:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"truncate"},{"text":"(","kind":"text"},{"text":"length","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"addEllipsis","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"abstract":[{"type":"text","text":"Truncates the string to a specified length, optionally adding an ellipsis."}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/double":{"abstract":[{"type":"text","text":"Converts the string to a "},{"type":"codeVoice","code":"Double"},{"text":".","type":"text"}],"type":"topic","url":"\/documentation\/wing\/swift\/stringprotocol\/double","kind":"symbol","title":"double","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/double","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"double","kind":"identifier"},{"kind":"text","text":": "},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/formatNumber(decimalPlaces:locale:)":{"url":"\/documentation\/wing\/swift\/stringprotocol\/formatnumber(decimalplaces:locale:)","kind":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/formatNumber(decimalPlaces:locale:)","abstract":[{"type":"text","text":"Formats the string as a number with a specified number of decimal places."}],"role":"symbol","title":"formatNumber(decimalPlaces:locale:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"formatNumber","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"decimalPlaces"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"locale"},{"text":": ","kind":"text"},{"text":"Locale","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation6LocaleV"},{"text":") -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?","kind":"text"}],"type":"topic"},"doc://Wing/documentation/Wing/Swift/StringProtocol/bool":{"title":"bool","type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/bool","url":"\/documentation\/wing\/swift\/stringprotocol\/bool","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"bool"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":"?","kind":"text"}],"abstract":[{"text":"Converts the string to a ","type":"text"},{"code":"Bool","type":"codeVoice"},{"text":" (considering “true”, “false”, “yes”, “no”, “1”, “0” - case-insensitive).","type":"text"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/padding(toLength:withPad:)":{"abstract":[{"text":"Pads the string to a specified length by appending a padding character at the end.","type":"text"}],"type":"topic","url":"\/documentation\/wing\/swift\/stringprotocol\/padding(tolength:withpad:)","kind":"symbol","title":"padding(toLength:withPad:)","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/padding(toLength:withPad:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"padding","kind":"identifier"},{"kind":"text","text":"("},{"text":"toLength","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"withPad","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/isValidPostalCode":{"title":"isValidPostalCode","type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isValidPostalCode","url":"\/documentation\/wing\/swift\/stringprotocol\/isvalidpostalcode","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"isValidPostalCode","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Checks if the string is a valid postal code (US format: 5 digits or 5 digits followed by a hyphen and 4 digits)."}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/lowercasedFirstLetter":{"title":"lowercasedFirstLetter","url":"\/documentation\/wing\/swift\/stringprotocol\/lowercasedfirstletter","abstract":[{"text":"Returns a new string with the first letter lowercased.","type":"text"}],"type":"topic","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/lowercasedFirstLetter","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"lowercasedFirstLetter","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"kind":"symbol"},"doc://Wing/documentation/Wing/Swift/StringProtocol/inserting(_:at:)":{"abstract":[{"text":"Returns a new string with another string inserted at a given index.","type":"text"}],"kind":"symbol","title":"inserting(_:at:)","role":"symbol","url":"\/documentation\/wing\/swift\/stringprotocol\/inserting(_:at:)","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/inserting(_:at:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"inserting"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/isPhoneNumber":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"isPhoneNumber","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"url":"\/documentation\/wing\/swift\/stringprotocol\/isphonenumber","type":"topic","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isPhoneNumber","kind":"symbol","title":"isPhoneNumber","role":"symbol","abstract":[{"type":"text","text":"Checks if the string is a valid phone number (basic format allowing digits, +, -, space, (, ))."}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/startsWith(_:caseSensitive:)":{"abstract":[{"type":"text","text":"Checks if the string starts with another string (case-sensitive by default)."}],"type":"topic","url":"\/documentation\/wing\/swift\/stringprotocol\/startswith(_:casesensitive:)","kind":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/startsWith(_:caseSensitive:)","title":"startsWith(_:caseSensitive:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"startsWith","kind":"identifier"},{"kind":"text","text":"("},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"caseSensitive"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/toURL()":{"title":"toURL()","type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/toURL()","url":"\/documentation\/wing\/swift\/stringprotocol\/tourl()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"toURL"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation3URLV","text":"URL"},{"text":"?","kind":"text"}],"abstract":[{"text":"Converts the string to a ","type":"text"},{"code":"URL","type":"codeVoice"},{"type":"text","text":"."}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/removing(_:)":{"abstract":[{"type":"text","text":"Returns a new string with all occurrences of a substring removed."}],"type":"topic","url":"\/documentation\/wing\/swift\/stringprotocol\/removing(_:)","kind":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/removing(_:)","title":"removing(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"removing","kind":"identifier"},{"kind":"text","text":"("},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/uppercasedFirstLetter":{"title":"uppercasedFirstLetter","type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/uppercasedFirstLetter","url":"\/documentation\/wing\/swift\/stringprotocol\/uppercasedfirstletter","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"uppercasedFirstLetter"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Returns a new string with the first letter uppercased."}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/int":{"abstract":[{"type":"text","text":"Converts the string to an "},{"code":"Int","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","url":"\/documentation\/wing\/swift\/stringprotocol\/int","kind":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/int","title":"int","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"int"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"text":"?","kind":"text"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/isAlphanumeric":{"title":"isAlphanumeric","type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isAlphanumeric","url":"\/documentation\/wing\/swift\/stringprotocol\/isalphanumeric","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isAlphanumeric"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"text":"Checks if the string contains only alphanumeric characters.","type":"text"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/base64Encoded":{"abstract":[{"text":"Returns the base64 encoded version of the string.","type":"text"}],"type":"topic","url":"\/documentation\/wing\/swift\/stringprotocol\/base64encoded","kind":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/base64Encoded","title":"base64Encoded","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"base64Encoded"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":"?","kind":"text"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/formatPercentage()":{"kind":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/formatPercentage()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"formatPercentage","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?"}],"url":"\/documentation\/wing\/swift\/stringprotocol\/formatpercentage()","abstract":[{"type":"text","text":"Formats the string as a percentage string."}],"title":"formatPercentage()","type":"topic"},"doc://Wing/documentation/Wing/Swift/StringProtocol/indexOf(sub:occurrence:)":{"title":"indexOf(sub:occurrence:)","type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/indexOf(sub:occurrence:)","url":"\/documentation\/wing\/swift\/stringprotocol\/indexof(sub:occurrence:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"indexOf"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"sub"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"occurrence","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":"?"}],"abstract":[{"text":"Finds the index of the nth occurrence of a substring.","type":"text"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/float":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"float","kind":"identifier"},{"kind":"text","text":": "},{"text":"Float","preciseIdentifier":"s:Sf","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"float","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/float","type":"topic","url":"\/documentation\/wing\/swift\/stringprotocol\/float","abstract":[{"type":"text","text":"Converts the string to a "},{"type":"codeVoice","code":"Float"},{"type":"text","text":"."}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/randomAlphabetic(length:)":{"abstract":[{"text":"Generates a random string of a given length using only alphabetic characters.","type":"text"}],"type":"topic","url":"\/documentation\/wing\/swift\/stringprotocol\/randomalphabetic(length:)","kind":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/randomAlphabetic(length:)","title":"randomAlphabetic(length:)","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"randomAlphabetic","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"length"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/sha1()":{"title":"sha1()","type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/sha1()","url":"\/documentation\/wing\/swift\/stringprotocol\/sha1()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"sha1","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"abstract":[{"text":"Returns the SHA1 hash of the string.","type":"text"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/removingHTMLTags()":{"abstract":[{"text":"Returns a new string with all HTML tags removed.","type":"text"}],"type":"topic","url":"\/documentation\/wing\/swift\/stringprotocol\/removinghtmltags()","kind":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/removingHTMLTags()","title":"removingHTMLTags()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"removingHTMLTags","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/isAlphabetic":{"title":"isAlphabetic","type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isAlphabetic","url":"\/documentation\/wing\/swift\/stringprotocol\/isalphabetic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isAlphabetic"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"abstract":[{"text":"Checks if the string contains only alphabetic characters.","type":"text"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/endsWith(_:caseSensitive:)":{"abstract":[{"text":"Checks if the string ends with another string (case-sensitive by default).","type":"text"}],"type":"topic","url":"\/documentation\/wing\/swift\/stringprotocol\/endswith(_:casesensitive:)","kind":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/endsWith(_:caseSensitive:)","title":"endsWith(_:caseSensitive:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"endsWith"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"caseSensitive","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/isHexadecimal":{"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isHexadecimal"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[{"text":"Checks if the string is a valid hexadecimal string.","type":"text"}],"type":"topic","url":"\/documentation\/wing\/swift\/stringprotocol\/ishexadecimal","title":"isHexadecimal","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isHexadecimal","role":"symbol"},"doc://Wing/documentation/Wing/Swift/StringProtocol/isCaseInsensitiveEqual(to:)":{"role":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isCaseInsensitiveEqual(to:)","url":"\/documentation\/wing\/swift\/stringprotocol\/iscaseinsensitiveequal(to:)","type":"topic","title":"isCaseInsensitiveEqual(to:)","abstract":[{"text":"Checks if the string is case-insensitively equal to another string.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isCaseInsensitiveEqual"},{"kind":"text","text":"("},{"text":"to","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol"},"doc://Wing/documentation/Wing/Swift/StringProtocol/matches(regex:)":{"title":"matches(regex:)","type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/matches(regex:)","url":"\/documentation\/wing\/swift\/stringprotocol\/matches(regex:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"matches","kind":"identifier"},{"text":"(","kind":"text"},{"text":"regex","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"text":"Checks if the string matches a given regular expression.","type":"text"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/isNumeric":{"url":"\/documentation\/wing\/swift\/stringprotocol\/isnumeric","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isNumeric"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Checks if the string contains only numeric characters."}],"title":"isNumeric","role":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isNumeric"},"doc://Wing/documentation/Wing/Swift/StringProtocol/isValidURL":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isValidURL"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"title":"isValidURL","url":"\/documentation\/wing\/swift\/stringprotocol\/isvalidurl","abstract":[{"type":"text","text":"Checks if the string is a valid URL."}],"identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isValidURL","role":"symbol","kind":"symbol","type":"topic"},"doc://Wing/documentation/Wing/Swift/StringProtocol/random(length:from:)":{"abstract":[{"type":"text","text":"Generates a random string of a given length using a custom set of characters."}],"kind":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/random(length:from:)","title":"random(length:from:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"random","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"length"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"from","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"url":"\/documentation\/wing\/swift\/stringprotocol\/random(length:from:)","type":"topic","role":"symbol"},"doc://Wing/documentation/Wing/Swift/StringProtocol/snakeCased":{"abstract":[{"text":"Converts the string to snake case.","type":"text"}],"url":"\/documentation\/wing\/swift\/stringprotocol\/snakecased","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/snakeCased","type":"topic","title":"snakeCased","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"snakeCased"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/toIntArray(separatedBy:)":{"abstract":[{"text":"Converts the string to an array of integers (splitting by comma by default).","type":"text"}],"kind":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/toIntArray(separatedBy:)","title":"toIntArray(separatedBy:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"toIntArray"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"separatedBy"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> ["},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"text":"]","kind":"text"}],"url":"\/documentation\/wing\/swift\/stringprotocol\/tointarray(separatedby:)","type":"topic","role":"symbol"},"doc://Wing/documentation/Wing/Swift/StringProtocol/reversed":{"abstract":[{"type":"text","text":"Returns the reversed string."}],"url":"\/documentation\/wing\/swift\/stringprotocol\/reversed","type":"topic","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/reversed","title":"reversed","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"reversed","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/toData(using:)":{"type":"topic","abstract":[{"text":"Converts the string to ","type":"text"},{"code":"Data","type":"codeVoice"},{"text":" using a specified encoding.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"toData","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"using"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","text":"Encoding"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:10Foundation4DataV","text":"Data","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/toData(using:)","title":"toData(using:)","kind":"symbol","url":"\/documentation\/wing\/swift\/stringprotocol\/todata(using:)"},"doc://Wing/documentation/Wing/Swift/StringProtocol/substring(from:)":{"type":"topic","abstract":[{"text":"Returns a substring starting from a given index.","type":"text"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"substring"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/substring(from:)","kind":"symbol","title":"substring(from:)","url":"\/documentation\/wing\/swift\/stringprotocol\/substring(from:)"},"doc://Wing/documentation/Wing/Swift/StringProtocol/base64Decoded":{"url":"\/documentation\/wing\/swift\/stringprotocol\/base64decoded","kind":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/base64Decoded","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"base64Decoded"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":"?","kind":"text"}],"type":"topic","title":"base64Decoded","abstract":[{"text":"Returns the base64 decoded version of the string.","type":"text"}],"role":"symbol"},"doc://Wing/documentation/Wing/Swift/StringProtocol/matchingStrings(regex:)":{"type":"topic","abstract":[{"type":"text","text":"Returns all substrings that match a given regular expression."}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"matchingStrings"},{"text":"(","kind":"text"},{"text":"regex","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":") -> [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"]"}],"identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/matchingStrings(regex:)","title":"matchingStrings(regex:)","kind":"symbol","url":"\/documentation\/wing\/swift\/stringprotocol\/matchingstrings(regex:)"},"doc://Wing/documentation/Wing/Swift/StringProtocol":{"fragments":[{"text":"extension","kind":"keyword"},{"kind":"text","text":" "},{"text":"StringProtocol","preciseIdentifier":"s:Sy","kind":"identifier"}],"url":"\/documentation\/wing\/swift\/stringprotocol","navigatorTitle":[{"kind":"identifier","text":"StringProtocol"}],"role":"symbol","type":"topic","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol","title":"StringProtocol","abstract":[],"kind":"symbol"},"doc://Wing/documentation/Wing/Swift/StringProtocol/replacing(_:with:)":{"type":"topic","abstract":[{"text":"Returns a new string with all occurrences of a substring replaced.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"replacing"},{"kind":"text","text":"("},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/replacing(_:with:)","kind":"symbol","title":"replacing(_:with:)","url":"\/documentation\/wing\/swift\/stringprotocol\/replacing(_:with:)"},"doc://Wing/documentation/Wing/Swift/StringProtocol/appending(_:)":{"type":"topic","abstract":[{"type":"text","text":"Returns a new string with another string appended."}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"appending"},{"kind":"text","text":"("},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/appending(_:)","title":"appending(_:)","kind":"symbol","url":"\/documentation\/wing\/swift\/stringprotocol\/appending(_:)"},"doc://Wing/documentation/Wing/Swift/StringProtocol/urlDecoded":{"abstract":[{"type":"text","text":"Returns a URL decoded version of the string."}],"url":"\/documentation\/wing\/swift\/stringprotocol\/urldecoded","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/urlDecoded","role":"symbol","title":"urlDecoded","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"urlDecoded","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"?"}],"kind":"symbol"},"doc://Wing/documentation/Wing/Swift/StringProtocol/contains(_:caseSensitive:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"contains","kind":"identifier"},{"kind":"text","text":"("},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"caseSensitive"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"text":"Checks if the string contains another string (case-sensitive by default).","type":"text"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/contains(_:caseSensitive:)","title":"contains(_:caseSensitive:)","type":"topic","url":"\/documentation\/wing\/swift\/stringprotocol\/contains(_:casesensitive:)"},"doc://Wing/documentation/Wing/Swift/StringProtocol/trimmed":{"type":"topic","abstract":[{"type":"text","text":"Returns a new string with leading and trailing whitespace and newline characters removed."}],"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmed"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/trimmed","kind":"symbol","title":"trimmed","url":"\/documentation\/wing\/swift\/stringprotocol\/trimmed"},"doc://Wing/documentation/Wing/Swift/StringProtocol/utf8Data":{"url":"\/documentation\/wing\/swift\/stringprotocol\/utf8data","kind":"symbol","role":"symbol","title":"utf8Data","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/utf8Data","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"utf8Data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","text":"Data"},{"text":"?","kind":"text"}],"abstract":[{"text":"Converts the string to ","type":"text"},{"code":"Data","type":"codeVoice"},{"type":"text","text":" using UTF-8 encoding."}],"type":"topic"},"doc://Wing/documentation/Wing/Swift/StringProtocol/random(length:)":{"type":"topic","abstract":[{"text":"Generates a random string of a given length using alphanumeric characters.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"random"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"length"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/random(length:)","title":"random(length:)","kind":"symbol","url":"\/documentation\/wing\/swift\/stringprotocol\/random(length:)"},"doc://Wing/documentation/Wing/Swift/StringProtocol/toDoubleArray(separatedBy:)":{"type":"topic","abstract":[{"text":"Converts the string to an array of doubles (splitting by comma by default).","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"toDoubleArray"},{"kind":"text","text":"("},{"text":"separatedBy","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") -> [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"kind":"text","text":"]"}],"identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/toDoubleArray(separatedBy:)","kind":"symbol","title":"toDoubleArray(separatedBy:)","url":"\/documentation\/wing\/swift\/stringprotocol\/todoublearray(separatedby:)"},"doc://Wing/documentation/Wing/Swift/StringProtocol/empty":{"type":"topic","abstract":[{"text":"Returns an empty string.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"empty","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/empty","title":"empty","kind":"symbol","url":"\/documentation\/wing\/swift\/stringprotocol\/empty"},"doc://Wing/documentation/Wing/Swift/StringProtocol/containsOnlyCharactersIn(characterSet:)":{"type":"topic","abstract":[{"type":"text","text":"Checks if the string contains only characters from a given set."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"containsOnlyCharactersIn"},{"kind":"text","text":"("},{"kind":"externalParam","text":"characterSet"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation12CharacterSetV","text":"CharacterSet","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/containsOnlyCharactersIn(characterSet:)","kind":"symbol","title":"containsOnlyCharactersIn(characterSet:)","url":"\/documentation\/wing\/swift\/stringprotocol\/containsonlycharactersin(characterset:)"},"doc://Wing/documentation/Wing/Swift/StringProtocol/isValidIPAddress":{"type":"topic","title":"isValidIPAddress","kind":"symbol","abstract":[{"type":"text","text":"Checks if the string is a valid IP address (IPv4)."}],"identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isValidIPAddress","url":"\/documentation\/wing\/swift\/stringprotocol\/isvalidipaddress","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isValidIPAddress"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"doc://Wing/documentation/Wing/Swift":{"role":"collection","url":"\/documentation\/wing\/swift","type":"topic","kind":"symbol","title":"Swift","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift","abstract":[]},"doc://Wing/documentation/Wing/Swift/StringProtocol/date(withFormat:locale:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"date"},{"kind":"text","text":"("},{"text":"withFormat","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"locale"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Foundation6LocaleV","kind":"typeIdentifier","text":"Locale"},{"text":") -> ","kind":"text"},{"text":"Date","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Converts the string to a "},{"type":"codeVoice","code":"Date"},{"type":"text","text":" using the specified format."}],"url":"\/documentation\/wing\/swift\/stringprotocol\/date(withformat:locale:)","title":"date(withFormat:locale:)","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/date(withFormat:locale:)","type":"topic","role":"symbol","kind":"symbol"},"doc://Wing/documentation/Wing/Swift/StringProtocol/sha256()":{"abstract":[{"type":"text","text":"Returns the SHA256 hash of the string."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"sha256"},{"text":"() -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"kind":"symbol","url":"\/documentation\/wing\/swift\/stringprotocol\/sha256()","type":"topic","title":"sha256()","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/sha256()"},"doc://Wing/documentation/Wing/Swift/StringProtocol/utf8Decoded(_:)":{"type":"topic","title":"utf8Decoded(_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"utf8Decoded","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier","text":"Data"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":"?","kind":"text"}],"abstract":[{"text":"Returns a UTF-8 decoded version of the string from ","type":"text"},{"code":"Data","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/utf8Decoded(_:)","url":"\/documentation\/wing\/swift\/stringprotocol\/utf8decoded(_:)"},"doc://Wing/documentation/Wing/Swift/StringProtocol/isAnagram(of:)":{"type":"topic","abstract":[{"text":"Checks if the string is an anagram of another string.","type":"text"}],"identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isAnagram(of:)","kind":"symbol","role":"symbol","url":"\/documentation\/wing\/swift\/stringprotocol\/isanagram(of:)","title":"isAnagram(of:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isAnagram","kind":"identifier"},{"text":"(","kind":"text"},{"text":"of","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]},"doc://Wing/documentation/Wing/Swift/StringProtocol/isValidURL(additionalSchemes:)":{"abstract":[{"text":"Checks if the string is a valid URL and allow custom schemes","type":"text"}],"type":"topic","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/isValidURL(additionalSchemes:)","title":"isValidURL(additionalSchemes:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isValidURL"},{"kind":"text","text":"("},{"text":"additionalSchemes","kind":"externalParam"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"]) -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"url":"\/documentation\/wing\/swift\/stringprotocol\/isvalidurl(additionalschemes:)","kind":"symbol"},"doc://Wing/documentation/Wing/Swift/StringProtocol/kebabCased":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"kebabCased"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"role":"symbol","type":"topic","title":"kebabCased","abstract":[{"type":"text","text":"Converts the string to kebab case."}],"url":"\/documentation\/wing\/swift\/stringprotocol\/kebabcased","identifier":"doc:\/\/Wing\/documentation\/Wing\/Swift\/StringProtocol\/kebabCased","kind":"symbol"}}}